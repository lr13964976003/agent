
    digraph {
        rankdir=TB
        size="25,20"
        node [shape=box, style=filled]
        
        // Layer input
        input [label="Layer Input
[1024, 10000, 8192]", fillcolor=lightblue]
        
        // LayerNorm
        ln1 [label="LayerNorm1
[1024, 10000, 8192]", fillcolor=lightgreen]
        
        // QKV Linear - Column Parallel
        subgraph cluster_qkv {
            label="QKV Linear (Column Parallel)"
            style=filled
            fillcolor=lightyellow
            
            split_qkv [label="Split Input
8-way parallel", shape=parallelogram]
            q_linear [label="Query Linear
[1024, 10000, 1024]", fillcolor=orange]
            k_linear [label="Key Linear
[1024, 10000, 1024]", fillcolor=orange]
            v_linear [label="Value Linear
[1024, 10000, 1024]", fillcolor=orange]
        }
        
        // Attention
        subgraph cluster_attn {
            label="Multi-Head Attention"
            style=filled
            fillcolor=lightcyan
            
            attn_score [label="Q·K^T
[1024, 2, 10000, 10000]", fillcolor=lightgreen]
            softmax [label="Softmax
[1024, 2, 10000, 10000]", fillcolor=lightgreen]
            attn_out [label="Attention·V
[1024, 10000, 1024]", fillcolor=lightgreen]
        }
        
        // Gather and Project
        gather_attn [label="Gather Outputs
8-way → 1", shape=parallelogram]
        split_proj [label="Split for Projection
8-way parallel", shape=parallelogram]
        attn_proj [label="Output Projection
[1024, 10000, 1024]", fillcolor=orange]
        allreduce_proj [label="All-Reduce Sum
8-way → 1", shape=parallelogram, fillcolor=red]
        
        // Residual 1
        res1 [label="Residual Add 1
[1024, 10000, 8192]", fillcolor=lightgreen]
        
        // LayerNorm2
        ln2 [label="LayerNorm2
[1024, 10000, 8192]", fillcolor=lightgreen]
        
        // MLP - Column + Row Parallel
        subgraph cluster_mlp {
            label="MLP (Column + Row Parallel)"
            style=filled
            fillcolor=lightpink
            
            split_mlp [label="Split Input
8-way parallel", shape=parallelogram]
            mlp1 [label="Linear1 (Column)
[1024, 10000, 4096]", fillcolor=orange]
            gelu [label="GELU
[1024, 10000, 4096]", fillcolor=lightgreen]
            mlp2 [label="Linear2 (Row)
[1024, 10000, 1024]", fillcolor=orange]
            allreduce_mlp [label="All-Reduce Sum
8-way → 1", shape=parallelogram, fillcolor=red]
        }
        
        // Final residual
        res2 [label="Residual Add 2
[1024, 10000, 8192]", fillcolor=lightgreen]
        
        // Output
        output [label="Layer Output
[1024, 10000, 8192]", fillcolor=lightblue]
        
        // Connections
        input -> ln1
        ln1 -> split_qkv
        split_qkv -> q_linear
        split_qkv -> k_linear
        split_qkv -> v_linear
        q_linear -> attn_score
        k_linear -> attn_score
        attn_score -> softmax
        softmax -> attn_out
        v_linear -> attn_out
        attn_out -> gather_attn
        gather_attn -> split_proj
        split_proj -> attn_proj
        attn_proj -> allreduce_proj
        allreduce_proj -> res1
        input -> res1 [style=dashed]
        res1 -> ln2
        ln2 -> split_mlp
        split_mlp -> mlp1
        mlp1 -> gelu
        gelu -> mlp2
        mlp2 -> allreduce_mlp
        allreduce_mlp -> res2
        res1 -> res2 [style=dashed]
        res2 -> output
    }
    
